{
    "compilerOptions": {
      "baseUrl": ".",
      "declaration": true,
      "declarationMap": true,  
      // All new TypeScript projects should use "esModuleInterop": true.
      // https://esbuild.github.io/content-types/#es-module-interop
      // https://www.typescriptlang.org/tsconfig#esModuleInterop
      "esModuleInterop": true,      
      "forceConsistentCasingInFileNames": true,
      // Setting "importHelpers" to true would mean that a consumer of a library
      // would need to declare tslib as a dependency. Don't do it!
      // https://www.typescriptlang.org/tsconfig#importHelpers
      "importHelpers": false,  
      // https://www.typescriptlang.org/tsconfig#lib
      // Check Node.js support here:
      // https://node.green/
      "lib": ["ESNext"],  
      // https://www.typescriptlang.org/tsconfig#module
      "module": "NodeNext",  
      // https://www.typescriptlang.org/docs/handbook/module-resolution.html
      "moduleResolution": "NodeNext",  
      // https://www.typescriptlang.org/tsconfig#noImplicitAny
      "noImplicitAny": true,  
      // https://www.typescriptlang.org/tsconfig#noUnusedLocals
      "noUnusedLocals": true,  
      // https://www.typescriptlang.org/tsconfig#noUnusedParameters
      "noUnusedParameters": true,  
      "outDir": "./dist",
      // As far as I understand, preserveConstEnums has no effect for non-const
      // enums and should not affect the bundle size, but it must be set to true
      // when isolatedModules is set to true.
      // https://stackoverflow.com/questions/28818849/how-do-the-different-enum-variants-work-in-typescript
      // https://www.typescriptlang.org/tsconfig#preserveConstEnums
      // https://ncjamieson.com/dont-export-const-enums/
      "preserveConstEnums": true,      
      "removeComments": false,
      "rootDir": "./src",  
      // It would be safer to set skipLibCheck to false, but it's kind of slow.
      // Maybe enable it from time to time to type check dependencies.
      // https://www.typescriptlang.org/tsconfig#skipLibCheck
      "skipLibCheck": false,  
      // In most cases we want to generate source maps.
      // https://m.signalvnoise.com/paying-tribute-to-the-web-with-view-source/
      "sourceMap": true,  
      // strict mode sets many strict compiler options to true in one go.
      // https://www.typescriptlang.org/tsconfig#strict
      "strict": true,  
      // https://www.typescriptlang.org/tsconfig#strictNullChecks
      "strictNullChecks": true,  
      // https://www.typescriptlang.org/tsconfig#target
      // https://node.green/
      "target": "ES2020",
      // https://www.typescriptlang.org/tsconfig#typeRoots
      "typeRoots": ["./node_modules/@types", "./custom-types"]
    },  
    "exclude": ["./node_modules"],
    "include": ["./src/**/*.ts"]
  }
